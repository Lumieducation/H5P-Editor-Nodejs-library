name: Node CI tests

on: [push]

jobs:
    build:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [10.x]

        steps:
            - uses: actions/checkout@v1
            - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: npm-${{ runner.OS }}-build-${{ hashFiles('package-lock.json') }}
            - name: install + build
              run: npm ci
            - name: Cache H5P examples
              uses: actions/cache@v1
              with:
                  path: test/data/hub-content
                  key: h5p-hub-content-${{ hashFiles('test/data/content-type-cache/real-content-types.json') }}
            - name: Download content files from H5P Hub
              run: npm run download:content
            - name: format
              run: npm run format:check
            - name: lint
              run: npm run lint
            - name: unit-tests
              run: npm run test
            - name: integration-tests
              run: npm run test:integration
            - name: Install puppeteer dependencies on Linux
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt install gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget xvfb libgbm-dev
            - name: e2e-tests
              run: npm run test:e2e
              env:
                  CI: true
    coverage:
        name: Coverage generator
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v1

            - name: Use Node.js 10.x
              uses: actions/setup-node@v1
              with:
                  node-version: 10.x

            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: npm-${{ runner.OS }}-build-${{ hashFiles('package-lock.json') }}

            - name: install + build
              run: npm ci

            - name: Cache H5P examples
              uses: actions/cache@v1
              with:
                  path: test/data/hub-content
                  key: h5p-hub-content-${{ hashFiles('test/data/content-type-cache/real-content-types.json') }}

            - name: Download content files from H5P Hub
              run: npm run download:content

            - name: npm test:coverage
              run: npm run test:coverage

            - name: Coveralls
              uses: coverallsapp/github-action@master
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}

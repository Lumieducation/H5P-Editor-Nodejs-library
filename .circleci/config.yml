version: 2
jobs:
    install+build:
        docker:
            - image: circleci/node:10
        steps:
            - checkout
            - run: npm ci
            - restore_cache:
                  key: h5p-examples-cache-{{ checksum "test/data/content-type-cache/real-content-types.json" }}
            - save_cache:
                  key: install-cache-{{ checksum "package-lock.json" }}
                  paths:
                      - ./node_modules
                      - ./h5p
                      - ./build
            - run: npm run download:content            
            - save_cache:
                  key: h5p-examples-cache-{{ checksum "test/data/content-type-cache/real-content-types.json" }}
                  paths:
                      - ./test/data/hub-content

    lint:
        docker:
            - image: circleci/node:10
        steps:
            - checkout
            - restore_cache:
                  key: install-cache-{{ checksum "package-lock.json" }}
            - run: npm run download:content-type-cache
            - restore_cache:
                  key: h5p-examples-cache-{{ checksum "test/data/content-type-cache/real-content-types.json" }}
            - run: npm run lint
    format:
        docker:
            - image: circleci/node:10
        steps:
            - checkout
            - restore_cache:
                  key: install-cache-{{ checksum "package-lock.json" }}
            - run: npm run download:content-type-cache
            - restore_cache:
                  key: h5p-examples-cache-{{ checksum "test/data/content-type-cache/real-content-types.json" }}
            - run: npm run format:check
    unit-tests:
        docker:
            - image: circleci/node:10
        steps:
            - checkout
            - restore_cache:
                  key: install-cache-{{ checksum "package-lock.json" }}
            - run: npm run download:content-type-cache
            - restore_cache:
                  key: h5p-examples-cache-{{ checksum "test/data/content-type-cache/real-content-types.json" }}
            - run: npm run test
    integration-tests:
        docker:
            - image: circleci/node:10
        steps:
            - checkout
            - restore_cache:
                  key: install-cache-{{ checksum "package-lock.json" }}
            - run: npm run download:content-type-cache
            - restore_cache:
                  key: h5p-examples-cache-{{ checksum "test/data/content-type-cache/real-content-types.json" }}
            - run: npm run test:integration
    e2e-tests:
        docker:
            - image: circleci/node:10-browsers
        steps:
            - checkout
            - restore_cache:
                  key: install-cache-{{ checksum "package-lock.json" }}
            - run: npm run download:content-type-cache
            - restore_cache:
                  key: h5p-examples-cache-{{ checksum "test/data/content-type-cache/real-content-types.json" }}
            - run: npm run test:e2e
    release:
        docker:
            - image: 'circleci/node:latest'
        steps:
            - checkout
            - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            - run:
                  name: install
                  command: npm ci
            - run:
                  name: release
                  command: npm run semantic-release || true
workflows:
    version: 2
    h5peditor:
        jobs:
            - install+build
            - lint:
                  requires:
                      - install+build
            - format:
                  requires:
                      - install+build
            - unit-tests:
                  requires:
                      - install+build
            - e2e-tests:
                  requires:
                      - install+build
            - integration-tests:
                  requires:
                      - install+build
            - release:
                  requires:
                      - install+build
                      - lint
                      - format
                      - unit-tests
                      - e2e-tests
                      - integration-tests
